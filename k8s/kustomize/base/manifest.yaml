apiVersion: v1
kind: Service
metadata:
  labels:
    app: kargo-kursor
  name: kargo-kursor
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: kargo-kursor
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kargo-kursor
  name: kargo-kursor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kargo-kursor
  template:
    metadata:
      labels:
        app: kargo-kursor
    spec:
      containers:
      - image: 274199647570.dkr.ecr.us-east-1.amazonaws.com/kargo-kursor:dev
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
        name: kargo-kursor
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      nodeSelector:
        kubernetes.io/arch: amd64
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: tailscale
    tailscale.com/tags: tag:k8s-apps-brand-dev
  finalizers:
  - tailscale.com/finalizer
  labels:
    app: kargo-kursor
  name: kargo-kursor
spec:
  rules:
  - host: kargo-kursor.kargo.ts.net
    http:
      paths:
      - backend:
          service:
            name: kargo-kursor
            port:
              number: 80
        path: /
        pathType: Prefix
